# === Proto/Port 헤더 보정 (CloudFront → Origin) ===============================
# CloudFront는 'CloudFront-Forwarded-Proto' 헤더를 보냅니다.
map $http_cloudfront_forwarded_proto $cf_proto {
    default "";
    https   https;
    http    http;
}
map $http_x_forwarded_proto $xf_proto {
    default "";
    https   https;
    http    http;
}
map "$cf_proto$xf_proto" $proxy_x_proto {
    default $scheme;            # 둘 다 없으면 Nginx의 scheme
    ~*https https;
    ~*http  http;
}
map $proxy_x_proto $proxy_x_port {
    http  $server_port;         # 보통 80
    https 443;
}

map $http_origin $origin_allowed {
    default   0;
    "~^https://[a-z0-9.-]+\\.cloudfront\\.net$" 1;
}
map $http_referer $referer_allowed {
    default   0;
    "~^https://[a-z0-9.-]+\\.cloudfront\\.net(/|$)" 1;
}
map $request_method $is_options { default 0; OPTIONS 1; }
map "$request_method:$origin_allowed" $deny_preflight { default 0; "OPTIONS:0" 1; }
map $request_method $is_state_changing { default 0; POST 1; PUT 1; PATCH 1; DELETE 1; }
map $http_origin $has_origin { "" 0; default 1; }
map $origin_allowed $bad_origin { "0" 1; default 0; }
map $referer_allowed $bad_referer { "0" 1; default 0; }
map $origin_allowed $cors_origin { 1 $http_origin; 0 ""; }
map "$is_state_changing:$has_origin:$bad_origin:$bad_referer" $deny_csrf {
    default   0;
    "1:1:1:0" 1;
    "1:0:0:1" 1;
}


upstream app_upstream { server 127.0.0.1:${APP_PORT}; }   # Next.js (내부 HTTP)
upstream api_upstream { server backend:8080; }            # Spring (내부 HTTP)

server {
    listen      ${PORT};
    server_name _;


    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

    # 보안/성능 헤더
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Permissions-Policy "geolocation=(), microphone=(), camera=()" always;

    gzip on;
    gzip_types text/plain text/css application/json application/javascript application/xml+rss image/svg+xml;

    location = /api/auth/google/callback {
    proxy_pass             http://app_upstream;
    proxy_http_version     1.1;
    proxy_set_header       Host                 $host;
    proxy_set_header       X-Real-IP            $remote_addr;
    proxy_set_header       X-Forwarded-For      $proxy_add_x_forwarded_for;
    proxy_set_header       X-Forwarded-Host     $host;
    proxy_set_header       X-Forwarded-Proto    $proxy_x_proto;
    proxy_set_header       X-Forwarded-Port     $proxy_x_port;
}


    # === 백엔드(Spring) 프록시 (/api, /oauth2 등) ===========================
    location /oauth2/ {
        if ($deny_preflight) { return 403; }
        if ($is_options) {
            add_header Access-Control-Allow-Origin      $cors_origin always;
            add_header Access-Control-Allow-Credentials true         always;
            add_header Access-Control-Allow-Methods     "GET, POST, PUT, DELETE, OPTIONS" always;
            add_header Access-Control-Allow-Headers     "Authorization,Content-Type" always;
            add_header Access-Control-Max-Age           600 always;
            return 204;
        }
        if ($deny_csrf) { return 403; }

        proxy_pass             http://api_upstream;
        proxy_http_version     1.1;
        proxy_set_header       Host                 $host;
        proxy_set_header       X-Real-IP            $remote_addr;
        proxy_set_header       X-Forwarded-For      $proxy_add_x_forwarded_for;
        proxy_set_header       X-Forwarded-Host     $host;
        proxy_set_header       X-Forwarded-Proto    $proxy_x_proto;  # CloudFront 반영
        proxy_set_header       X-Forwarded-Port     $proxy_x_port;
        proxy_read_timeout     60s;
        proxy_connect_timeout  5s;
        proxy_redirect         off;
        proxy_set_header       Upgrade $http_upgrade;
        proxy_set_header       Connection "upgrade";
    }

    location /api/ {
        if ($deny_preflight) { return 403; }
        if ($is_options) {
            add_header Access-Control-Allow-Origin      $cors_origin always;
            add_header Access-Control-Allow-Credentials true         always;
            add_header Access-Control-Allow-Methods     "GET, POST, PUT, DELETE, OPTIONS" always;
            add_header Access-Control-Allow-Headers     "Authorization,Content-Type" always;
            add_header Access-Control-Max-Age           600 always;
            return 204;
        }
        if ($deny_csrf) { return 403; }

        add_header            Access-Control-Allow-Origin      $cors_origin always;
        add_header            Access-Control-Allow-Credentials true         always;
        add_header            Access-Control-Allow-Methods     "GET, POST, PUT, DELETE, OPTIONS" always;
        add_header            Access-Control-Allow-Headers     "Authorization,Content-Type" always;

        proxy_pass            http://api_upstream;
        proxy_http_version    1.1;
        proxy_set_header      Host               $host;
        proxy_set_header      X-Real-IP          $remote_addr;
        proxy_set_header      X-Forwarded-For    $proxy_add_x_forwarded_for;
        proxy_set_header      X-Forwarded-Host   $host;
        proxy_set_header      X-Forwarded-Proto  $proxy_x_proto;
        proxy_set_header      X-Forwarded-Port   $proxy_x_port;
        proxy_read_timeout    60s;
        proxy_connect_timeout 5s;
        proxy_redirect        off;
        proxy_set_header      Upgrade $http_upgrade;
        proxy_set_header      Connection "upgrade";

        proxy_pass_header     Set-Cookie;
    }

    # === Next.js 앱 ==========================================================
    location / {
        proxy_pass         http://app_upstream;
        proxy_http_version 1.1;
        proxy_set_header   Upgrade $http_upgrade;
        proxy_set_header   Connection "upgrade";
        proxy_set_header   Host              $host;
        proxy_set_header   X-Real-IP         $remote_addr;
        proxy_set_header   X-Forwarded-For   $proxy_add_x_forwarded_for;
        proxy_set_header   X-Forwarded-Host  $host;
        proxy_set_header   X-Forwarded-Proto $proxy_x_proto;
        proxy_set_header   X-Forwarded-Port  $proxy_x_port;
    }

    # 정적
    location /_next/static/ {
        alias /app/.next/static/;
        access_log off;
        expires 1y;
        add_header Cache-Control "public, max-age=31536000, immutable";
    }
    location /public/ {
        alias /app/public/;
        access_log off;
        expires 1h;
    }

    location = /healthz {
        return 200 'ok';
        add_header Content-Type text/plain;
    }
}